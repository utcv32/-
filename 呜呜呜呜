local RainbowTitleModule = {}

function RainbowTitleModule.Init(player, titleText)
    local moduleState = {
        Enabled = false,
        TitleText = titleText,
        Connection = nil,
        BillboardGui = nil
    }

    local function addTitleToCharacter(character)
        if not moduleState.Enabled then return end
        
        local head = character:FindFirstChild("Head") or character:WaitForChild("Head")
        local old = head:FindFirstChild("PlayerTitle")
        if old then old:Destroy() end
        
        local billboardGui = Instance.new("BillboardGui")
        billboardGui.Name = "PlayerTitle"
        billboardGui.Adornee = head
        billboardGui.Size = UDim2.new(4, 0, 1, 0)
        billboardGui.StudsOffset = Vector3.new(0, 2, 0)
        billboardGui.AlwaysOnTop = true
        billboardGui.MaxDistance = 1000
        
        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = moduleState.TitleText
        textLabel.TextScaled = true
        textLabel.Font = Enum.Font.GothamBold
        textLabel.TextWrapped = true
        textLabel.Parent = billboardGui
        
        local stroke = Instance.new("UIStroke")
        stroke.Thickness = 1
        stroke.Color = Color3.new(1, 1, 1)
        stroke.Parent = textLabel
        
        local gradient = Instance.new("UIGradient")
        gradient.Rotation = 90
        gradient.Parent = textLabel
        
        moduleState.Connection = game:GetService("RunService").RenderStepped:Connect(function()
            local time = tick() * 0.5
            gradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromHSV(time % 1, 1, 1)),
                ColorSequenceKeypoint.new(0.2, Color3.fromHSV((time + 0.2) % 1, 1, 1)),
                ColorSequenceKeypoint.new(0.4, Color3.fromHSV((time + 0.4) % 1, 1, 1)),
                ColorSequenceKeypoint.new(0.6, Color3.fromHSV((time + 0.6) % 1, 1, 1)),
                ColorSequenceKeypoint.new(0.8, Color3.fromHSV((time + 0.8) % 1, 1, 1)),
                ColorSequenceKeypoint.new(1, Color3.fromHSV(time % 1, 1, 1))
            })
        end)
        
        billboardGui.AncestryChanged:Connect(function()
            if not billboardGui:IsDescendantOf(game) then
                if moduleState.Connection then 
                    moduleState.Connection:Disconnect()
                    moduleState.Connection = nil
                end
            end
        end)
        
        billboardGui.Parent = head
        moduleState.BillboardGui = billboardGui
    end

    function moduleState:Toggle(state)
        self.Enabled = state
        if state then
            local character = player.Character or player.CharacterAdded:Wait()
            addTitleToCharacter(character)
            player.CharacterAdded:Connect(addTitleToCharacter)
        else
            if self.Connection then
                self.Connection:Disconnect()
                self.Connection = nil
            end
            if self.BillboardGui then
                self.BillboardGui:Destroy()
                self.BillboardGui = nil
            end
        end
    end

    return moduleState
end

local Players = game:GetService("Players")
local titleModule = RainbowTitleModule.Init(Players.LocalPlayer, "真神")
--开启
titleModule:Toggle(true)
--关闭
--titleModule:Toggle(false)
